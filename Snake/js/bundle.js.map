{"version":3,"sources":["webpack/bootstrap aa19f31514efd6d26d18","./js/main.js","./js/snake.js","./js/coord.js","./js/board.js","./js/snake-view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACND;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACpCA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClBA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;;;;;;ACtDA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap aa19f31514efd6d26d18\n **/","let SnakeGame = require('./snake.js');\nlet SnakeView = require('./snake-view.js');\n$( () => {\n  const rootEl = $('.game');\n  const game = new SnakeGame();\n  new SnakeView(game, rootEl);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 1\n ** module chunks = 0\n **/","let Coord = require('./coord.js');\n\nlet Board = require('./board.js');\n\nfunction Snake(){\n\n  this.directions = {\n    N:[1,  0],\n    S:[-1, 0],\n    E:[0,  1],\n    W:[0, -1]\n  };\n  this.dir = \"N\";\n  this.segments = [new Coord(12, 12)];\n  this.board = new Board(this);\n}\n\n\nSnake.prototype.move = function () {\n  let lastUpdatedCoord = this.segments[0].coord.slice();\n\n  let newHead = this.segments[0].plus(this.directions[this.dir]);\n\n  for (var i = 1; i < this.segments.length; i++){\n    let holder =  this.segments[i].coord.slice();\n    this.segments[i].coord = new Coord(lastUpdatedCoord[0], lastUpdatedCoord[1]);\n    lastUpdatedCoord = holder;\n  }\n\n\n};\n\nSnake.prototype.turn = function (dir) {\n  this.dir = dir;\n};\n\nmodule.exports = Snake;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 2\n ** module chunks = 0\n **/","function Coord(row, col){\n  this.coord = [row, col];\n\n\n}\n\nCoord.prototype.plus= function (posArr) {\n  this.coord[0] += posArr[0];\n  this.coord[1] += posArr[1];\n};\n\nCoord.prototype.equals = function (posArr) {\n  if ((this.coord[0] === posArr[0]) && (this.coord[1] === posArr[1])) {\n    return true;\n  }\n  return false;\n};\n\nmodule.exports = Coord;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/coord.js\n ** module id = 3\n ** module chunks = 0\n **/","function Board(snake) {\n  this.board = this.createGrid();\n  this.snake = snake;\n  this.applePos = this.randomPos();\n  this.change();\n\n\n}\n\nBoard.prototype.createGrid = function () {\n  let grid = new Array(25);\n  for (var i = 0; i < grid.length; i++) {\n    grid[i] = new Array(25);\n  }\n  return grid;\n};\n\nBoard.prototype.randomPos = function(snakeCoords){\n  snakeCoords = snakeCoords || this.snake.segments.map(function(segment){\n    return segment.coord;\n  });\n\n  let row = Math.floor(Math.random() * 25);\n  let col = Math.floor(Math.random() * 25);\n  let randomCoord = [row, col];\n\n  if (this.anyCoordsEqual(snakeCoords, randomCoord)){\n      return this.randomPos(snakeCoords);\n  }\n  else{\n       return randomCoord;\n  }\n};\n\nBoard.prototype.anyCoordsEqual = function(snakeCoords, randomCoord){\n  return snakeCoords.some((snakeCoord) => {\n    return this.coordsEqual(snakeCoord, randomCoord);\n  });\n};\n\nBoard.prototype.coordsEqual = function(coords1, coords2){\n  return ((coords1[0] === coords2[0]) && (coords1[1] === coords2[1]));\n};\n\nBoard.prototype.change = function(){\n  /* render all snake coords as snake coords.  Render apples.  The rest are blank*/\n  this.board = this.createGrid();\n  this.snake.segments.forEach((coordObj) => {\n    let snakeCoord = coordObj.coord;\n    this.board[snakeCoord[0]][snakeCoord[1]] = \"S\";\n  });\n\n  this.board[this.applePos[0]][this.applePos[1]] = \"A\";\n};\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/board.js\n ** module id = 4\n ** module chunks = 0\n **/","function View(game, $el){\n  this.game = game;\n  this.$el = $el;\n\n  this.setupBoard();\n  this.render();\n\n  setInterval(()=>{\n    this.game.move();\n    this.game.board.change();\n    this.render();\n  }, 1000);\n}\n\nView.prototype.setupBoard = function () {\n  const ul = $('<ul class=\"board\"></ul>');\n  for (var i = 0; i < 625; i++) {\n    const li = $('<li class=\"square\"></li>');\n    ul.append(li);\n  }\n  this.$el.append(ul);\n};\n\nView.prototype.render = function () {\n  let $lis = $('li.square');\n  $lis.attr('class', 'square');\n  let $ul = $('ul.board');\n\n  this.game.board.board.forEach(function(row, i){\n    row.forEach(function(col, j){\n      let n = i * row.length + j;\n      n++;\n      let $li = $(\"li:nth-child(\" + n + \")\");\n\n      if (col === undefined){\n\n      }\n      else if(col === \"S\"){\n        $li.addClass('snake');\n      }\n      else if (col === \"A\"){\n        $li.addClass('apple');\n      }\n    });\n  });\n};\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake-view.js\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}